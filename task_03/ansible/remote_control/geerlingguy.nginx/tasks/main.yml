---
#@ custom ---------------------------------
- name: Create SSL configuration folder.
  file:
      path: /etc/nginx/ssl
      state: directory
      owner: root
      group: root
      mode: 0640

- name: Copy Certificate.
  copy:
      src: ../certs/
      dest: /etc/nginx/ssl/
      owner: root
      group: root
      mode: 0444
- name: Copy index.html.
  copy:
      dest: /var/www/html/index.html
      content: |
          <h1> Have a great day ! </h1>
  tags: index_html
#@ custom ---------------------------------
# Variable setup.
- name: Include OS-specific variables.
  include_vars: '{{ ansible_os_family }}.yml'

- name: Define nginx_user.
  set_fact:
      nginx_user: '{{ __nginx_user }}'
  when: nginx_user is not defined

# Setup/install tasks.
- include_tasks: setup-RedHat.yml
  when: ansible_os_family == 'RedHat' or ansible_os_family == 'Rocky' or ansible_os_family == 'AlmaLinux'

- include_tasks: setup-Ubuntu.yml
  when: ansible_distribution == 'Ubuntu'

- include_tasks: setup-Debian.yml
  when: ansible_os_family == 'Debian'

- include_tasks: setup-FreeBSD.yml
  when: ansible_os_family == 'FreeBSD'

- include_tasks: setup-OpenBSD.yml
  when: ansible_os_family == 'OpenBSD'

- include_tasks: setup-Archlinux.yml
  when: ansible_os_family == 'Archlinux'

- include_tasks: setup-Suse.yml
  when: ansible_os_family == 'Suse'

# Vhost configuration.
- import_tasks: vhosts.yml

# Nginx setup.
- name: Copy nginx configuration in place.
  template:
      src: '{{ nginx_conf_template }}'
      dest: '{{ nginx_conf_file_path }}'
      owner: root
      group: '{{ root_group }}'
      mode: 0644
  notify:
      - reload nginx

- name: Ensure nginx service is running as configured.
  service: #? config state requirement
      name: nginx
      state: '{{ nginx_service_state }}' #? started
      enabled: '{{ nginx_service_enabled }}' #? true
#@ custom ----------------------------------------------------------------
- name: Remote control result.
  block:
      - name: Check Nginx status
        command: systemctl status nginx
        register: nginx_status
      - name: Remote control result
        debug:
            msg: "Nginx is {{ 'running' if 'Active: active (running)' in nginx_status.stdout else 'not running' }}." # In ra trạng thái Nginx
