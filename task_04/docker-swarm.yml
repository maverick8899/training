services:
    elasticsearch:
        env_file:
            - .env
        image: docker.elastic.co/elasticsearch/elasticsearch:7.16.0
        # environment:
        #     CONFIG_DIR: /usr/share/elasticsearch/config
        #     ELASTIC_USERNAME: ${ELASTIC_USERNAME}
        #     ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
        #     ES_JAVA_OPTS: -Xmx${ELASTICSEARCH_HEAP} -Xms${ELASTICSEARCH_HEAP}
        volumes:
            - elastic_data:/usr/share/elasticsearch
            - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
        secrets:
            - source: elasticsearch.keystore
              target: /usr/share/elasticsearch/config/elasticsearch.keystore
            - source: ca.crt
              target: /usr/share/elasticsearch/config/ca.crt
            - source: elasticsearch.cert
              target: /usr/share/elasticsearch/config/elasticsearch.crt
            - source: elasticsearch.key
              target: /usr/share/elasticsearch/config/elasticsearch.key
        ports:
            - target: 9200
              published: 9200
              mode: host
            - target: 9300
              published: 9300
              mode: host
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
        healthcheck:
            test: curl -s https://elasticsearch:9200 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
            interval: 30s
            timeout: 10s
            retries: 5
        ulimits:
            memlock:
                soft: -1
                hard: -1
            nofile:
                soft: 200000
                hard: 200000
        networks:
            - efk

    kibana:
        env_file:
            - .env
        image: maverick0809/kibana_tls:7.16.0
        ports:
            - target: 5601
              published: 5601
              mode: host
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
        volumes:
            - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro
        # environment:
        #     CONFIG_DIR: /usr/share/kibana/config
        #     ELASTIC_USERNAME: ${ELASTIC_USERNAME}
        #     ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
        #     ENCRYPTION_KEY: ${XPACK_ENCRYPTION_KEY}
        #     KIBANA_URL: ${KIBANA_URL}
        secrets:
            - source: ca.crt
              target: /usr/share/kibana/config/ca.crt
            - source: kibana.cert
              target: /usr/share/kibana/config/kibana.crt
            - source: kibana.key
              target: /usr/share/kibana/config/kibana.key
        healthcheck:
            test: curl -s https://kibana:5601 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
            interval: 30s
            timeout: 10s
            retries: 5
        networks:
            - efk
        depends_on:
            - elasticsearch

networks:
    efk:
        driver: overlay
volumes:
    elastic_data: {}

secrets:
    ca.crt:
        file: ./secrets/certificate_authority/ca/ca.crt

    elasticsearch.keystore:
        file: ./secrets/elasticsearch.keystore
    elastic-stack-ca.p12:
        file: ./secrets/certificate_authority/elastic-stack-ca.p12
    elasticsearch.key:
        file: ./secrets/certificates/elasticsearch/elasticsearch.key
    elasticsearch.cert:
        file: ./secrets/certificates/elasticsearch/elasticsearch.crt
    elasticsearch1.key:
        file: ./secrets/certificates/elasticsearch1/elasticsearch1.key
    elasticsearch1.cert:
        file: ./secrets/certificates/elasticsearch1/elasticsearch1.crt
    elasticsearch2.key:
        file: ./secrets/certificates/elasticsearch2/elasticsearch2.key
    elasticsearch2.cert:
        file: ./secrets/certificates/elasticsearch2/elasticsearch2.crt
    elasticsearch3.key:
        file: ./secrets/certificates/elasticsearch3/elasticsearch3.key
    elasticsearch3.cert:
        file: ./secrets/certificates/elasticsearch3/elasticsearch3.crt

    kibana.key:
        file: ./secrets/certificates/kibana/kibana.key
    kibana.cert:
        file: ./secrets/certificates/kibana/kibana.crt
